<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
    <metadata>
        <id>clr-format.js</id>
        <version>0.0.0</version>
        <title>CLR Format (Javascript)</title>
        <authors>Viktor Mitev</authors>
        <licenseUrl>https://github.com/clr-format/clr-format/blob/master/LICENSE</licenseUrl>
        <projectUrl>https://github.com/clr-format/clr-format</projectUrl>
        <iconUrl>https://avatars3.githubusercontent.com/u/13048800</iconUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <summary>A lightweight, modular and stand-alone JavaScript implementation of a string formatting function that fully supports composite formatting, globalization and customization</summary>
        <description>
The implementation of this string formatting function is inspired by .NET's (and other Microsoft® products') Composite Formatting feature. Therefore the behaviour and method signatures match what's described in the "Getting started with the String.Format method" MSDN article as closely as possible. The main difference is that method names in JavaScript are intrinsically camelcase therefore String.format should be used instead.

The project's site or the API documentation can be refered for more details at http://clr-format.github.io/clr-format/
        </description>
        <releaseNotes>
1. Support for all of .NET's standard and custom format specifiers for number and date objects (except for some currency specifier cases).
2. Optional globalization API contained in clr-format-intl.js that allows for culture-specific globalization formatting via the Format.setCulture and Format.setCurrency methods.
3. Optional configuration API contained in clr-format-config.js and defined under the Format.Config namespace. See http://clr-format.github.io/clr-format/modules/format.config.html
        </releaseNotes>
        <tags>string format javascript typescript number date time globalization intl composite formatting custom standard specifiers</tags>
    </metadata>
    <files>
        <file src="dist\*.d.ts" target="content\" />
        <file src="dist\clr-format.js" target="content\" />
        <file src="dist\clr-format.min.js" target="content\" />
        <file src="dist\clr-format-intl*.js" target="content\" />
        <file src="dist\clr-format-config*.js" target="content\" />
    </files>
</package>